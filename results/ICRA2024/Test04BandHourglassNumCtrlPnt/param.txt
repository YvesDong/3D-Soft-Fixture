delay_collision_checking = 1
focus_search = 1
goal_bias = 0.05
informed_sampling = 1
new_state_rejection = 1
number_sampling_attempts = 100
ordered_sampling = 0
ordering_batch_size = 1
prune_threshold = 0.05
pruned_measure = 1
range = 0.3
rewire_factor = 0.01
sample_rejection = 0
tree_pruning = 1
use_admissible_heuristic = 1
use_k_nearest = 1

parser.add_argument('-c', '--scenario', default='BandHourglass', \
    choices=['FishFallsInBowl', 'HookTrapsRing', 'GripperClenchesStarfish', 'BustTrapsBand', \
                'RopeBucket', 'BandHourglass', 'JellyMaze', '2DSnapLock', '3DSnapLock', \
                'StarfishBowl', 'HookFishHole', 'ShovelFish', 'BimanualRubic', 'HandbagGripper', \
                'MaskEar'], \
    help='(Optional) Specify the scenario of demo, defaults to FishFallsInBowl if not given.')

parser.add_argument('-s', '--search', default='EnergyBiasedSearch', \
    choices=['BisectionSearch', 'EnergyBiasedSearch'], \
    help='(Optional) Specify the sampling-based search method to use, defaults to BisectionSearch if not given.')

parser.add_argument('-p', '--planner', default='RRTstar', \
    choices=['BFMTstar', 'BITstar', 'FMT', 'InformedRRTstar', 'PRMstar', 'RRTstar', \
    'SORRTstar', 'RRT', 'AITstar', 'LBTRRT'], \
    help='(Optional) Specify the optimal planner to use, defaults to RRTstar if not given.')

parser.add_argument('-j', '--object', default='BandHorizon', \
    choices=['Fish', 'FishWithRing', 'Starfish', 'Ring', 'Band', 'BandHorizon', 'MaskBand', 'Rope', 'Humanoid', 'Donut', \
                'Jelly', '3fGripper', 'PlanarRobot', 'Snaplock', 'PandaArm', 'FishHole', '2Dlock', \
                'Rubic', 'Chain'], \
    help='(Optional) Specify the object to cage.')

parser.add_argument('-l', '--obstacle', default='Hourglass', \
    choices=['Box', 'Hook', '3fGripper', 'Bowl', 'Bust', 'Hourglass', 'Ring', 'Hole', \
                'Maze', '2Dkey', 'SplashBowl', 'Radish', 'Shovel', 'LeftHand', 'LeftHandAndBowl', \
                'ShadowHand', 'Bucket', 'Ear'], \
    help='(Optional) Specify the obstacle that cages the object.')

parser.add_argument('-t', '--runtime', type=float, default=600, help=\
    '(Optional) Specify the runtime in seconds. Defaults to 1 and must be greater than 0. (In the current settings, 240 s not better a lot than 120 s)')

parser.add_argument('-v', '--visualization', type=bool, default=0, help=\
    '(Optional) Specify whether to visualize the pybullet GUI. Defaults to False and must be False or True.')
